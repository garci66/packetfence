/tenants_onboarding:
  post:
    summary: Allows to onboard a tenant and configure a remote access point using an onboarding token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: User friendly name of the tenant
              domain_name:
                type: string
                description: A valid domain name that will be used as the 802.1x realm
              portal_domain_name:
                type: string
                description: A valid domain name that will be used for the tenant portal domain name
              token:
                type: string
                description: The user token that allows to find the proper AP that the tenant is configuring
              ssids:
                type: array
                items:
                  type: object
                  properties:
                    security:
                      description: The security type of the SSID. Valid types "WPA2-Personnal", "WPA2-Enterprise", "MAC-Authentication"
                      type: string
                    name:
                      description: The name of the SSID
                      type: string
    responses:
      '201':
        $ref: "#/components/responses/Created"
      '400':
        $ref: "#/components/responses/BadRequest"
      '409':
        $ref: "#/components/responses/Duplicate"
      '422':
        $ref: "#/components/responses/UnprocessableEntity"

    
/tenants:
  get:
    summary: Returns a list of tenants
    description: The list of tenants will be limited to 100 and a cursor will be returned for iterating on other tenants. Iteration is only needed if the nextCursor is not an empty value.
    parameters:
      - $ref: '#/components/parameters/cursor'
    responses:
      '200':
        description: List of tenants
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantsList"
  post:
    summary: Creates a tenant
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tenant"
    responses:
      '201':
        $ref: "#/components/responses/Created"
      '400':
        $ref: "#/components/responses/BadRequest"
      '409':
        $ref: "#/components/responses/Duplicate"
      '422':
        $ref: "#/components/responses/UnprocessableEntity"

'/tenants/{tenant_id}':
  get:
    summary: Returns a specific tenant by its ID
    parameters:
      - name: tenant_id
        in: path
        required: true
        description: The tenant ID to fetch
        schema:
          type: string
    responses:
      '200':
        description: A specific tenant
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  $ref: "#/components/schemas/Tenant"
  put:
    summary: Allows to update a whole tenant
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tenant"
    responses:
      '200':
        $ref: "#/components/responses/Message"    
      '400':
        $ref: "#/components/responses/BadRequest"
      '422':
        $ref: "#/components/responses/UnprocessableEntity"
  patch:
    summary: Allows to update parts of a tenant
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tenant"
    responses:
      '200':
        $ref: "#/components/responses/Message"    
      '400':
        $ref: "#/components/responses/BadRequest"
      '422':
        $ref: "#/components/responses/UnprocessableEntity"
  delete:
    summary: Allows to delete a tenant
    responses:
      '204':
        description: Deleted tenant



