=== Packer

To build PacketFence, we use link:http://packer.io[Packer] to create link:https://hub.docker.com/u/inverseinc[Docker images] that are then used in a GitLab pipeline.

=== Anatomy of Packer template

PacketFence rely on link:https://hub.docker.com/u/buildpkg[buildpkg Docker
images] to run GitLab pipeline with
link:https://gitlab.com/Orange-OpenSource/gitlab-buildpkg-tools[gitlab-buildpkg-tools]. Packer
template ([filename]`pfbuild.json`) use these images as base to build
inverseinc Docker images.

==== Custom build dependencies

To start building PacketFence, we need to install specific things in images
like:

* custom repositories and GPG keys to install RPM or DEB packages at build time
* install and configure upstream softwares necessary to build PacketFence if we can't use packages

We use Ansible and shell scripts to cover these steps. It's possible because Python is already
installed in link:https://hub.docker.com/u/buildpkg[buildpkg Docker
images].

==== Build dependencies in packages specs

Build dependencies need to be install in Docker images before starting build
process. We rely on [package]`gitlab-buildpkg-tools` to automatically install
those dependencies based on packages specifications file. Consequently, all
build requires need to be define in packages specifications file.

==== Golang environment

We use Packer to set up a Golang environment in order to build Golang binaries in Docker images.

We also set environment variables in Docker images, using `ENV` directives, to simplify usage of [command]`go` commands.

==== Clean up

To make Docker images lightweight, we make a clean up at end of the process.

=== How to build Docker images ?

Docker images are built inside a GitLab pipeline.

==== Prerequisites

.Install following softwares:
* http://packer.io/intro/getting-started/install.html[Packer] (>=1.6.5)
* https://docs.docker.com/install/[Docker]
* Ansible (>=2.10)

==== Makefile

Because we run build inside a GitLab pipeline, many environment variables can
be set to change build behavior. A [filename]`Makefile` and a wrapper are provided to
simplify creation of a new Docker images based on environment variables.

.Example usage of Makefile
[source,bash]
----
GOVERSION=go1.9.3 DOCKER_TAGS=$GOVERSION ACTIVE_BUILDS=pfbuild-stretch \
make -e -C ci/packer
----

=== Troubleshooting

You can troubleshoot issues in Packer builds by setting environment variable `$PACKER_LOG` environment variable to `1`.
