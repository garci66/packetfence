= PacketFence Upgrade Guide
////

    This file is part of the PacketFence project.

    See docs/includes/global-attributes.asciidoc for authors, copyright and
    license information.

////
include::includes/global-attributes.asciidoc[]

== About this Guide

This guide covers procedures to upgrade PacketFence servers.

=== Other sources of information

<<PacketFence_Clustering_Guide.asciidoc#,Clustering Guide>>::
  Covers installation in a clustered environment.
<<PacketFence_Developers_Guide.asciidoc#,Developer's Guide>>::
  Covers API, captive portal customization, application code customizations and
  instructions for supporting new equipment.
<<PacketFence_Installation_Guide.asciidoc#,Installation Guide>>::
  Covers installation and configuration of PacketFence.
<<PacketFence_Network_Devices_Configuration_Guide.asciidoc#,Network Devices Configuration Guide>>::
  Covers switches, WiFi controllers and access points configuration.
link:https://packetfence.org/news.html[PacketFence News]
  Covers noteworthy features, improvements and bug fixes by release.

These files are included in the package and release tarballs.

== General Upgrade Tips

=== Prerequisites

You need to have your MariaDB root password ready because several scripts will need it.


=== Database backup


Before making any changes to your database, ensure that you have a backup.
A complete database backup can be taken using this command:

[source,bash]
----
mysqldump --opt --routines -u root -p pf | gzip > /root/packetfence_db.sql.gz
----

If your database is more than a few hundred megabytes, you may also want to consider using a tool such as Percona XtraBackup which makes for much faster restores than mysqldump.

It is also possible to simply backup the actual MySQL files themselves -- as long as the database is not currently running.
To do so, stop MySQL and then copy all files under /var/lib/mysql to a secure directory.

=== PacketFence configurations and codebase backup


Taking a complete backup of your current installation is strongly recommended.
You can take a backup of the pf directory with the following command:

[source,bash]
----
tar -C /usr/local -czf /root/packetfence.tar.gz --exclude='pf/logs' --exclude='pf/var' --exclude='pf/.git' pf
----

=== Disable monit alerts (only if you have monit installed)


If `monit` is installed and running, shut it down with:

[source,bash]
----
systemctl stop monit
systemctl disable monit
----

== Upgrade procedure

=== Steps

A PacketFence upgrade consists of following steps:

. stop all PacketFence services (see <<_stop_all_packetfence_services,Stop all PacketFence services>> section)
. preliminary step(s) to run before packages upgrades (see sections for your upgrade path)
. packages upgrades (see <<_packages_upgrades,Package upgrades>> section)
. maintenance patches (see <<_maintenance_patches,Maintenance patches>> section)
. configuration migration(s) (see sections for your upgrade path)
. database schema upgrade(s) (see sections for your upgrade path)
. restart all PacketFence services (see <<_restart_all_packetfence_services,Restart all PacketFence services>> section)
. regenerate Monit configuration (optional) (see <<_regenerate_monit_configuration,Regenerate Monit configuration>> section)

Upgrade notes for a given upgrade path are cumulative. That is to say, if you
are upgrading from version 7.0 to version 9.0 you must apply in order all:

. preliminary step(s) to run before packages upgrades
. configuration migration(s)
. database schema upgrade(s)

in between the two versions.

IMPORTANT: Before starting packages upgrades, make sure to go through (read) the upgrade
instructions specific to the upgrade path taken since some preliminary steps may be
required to be done *BEFORE* the packages upgrades.

==== Clustered environment: specific procedure

Please refer to the <<PacketFence_Clustering_Guide.asciidoc#,PacketFence Clustering Guide>>, more specifically the <<PacketFence_Clustering_Guide.asciidoc#_performing_an_upgrade_on_a_cluster,Performing an upgrade on a cluster>> section.

=== Stop all PacketFence services

It is recommended that you stop the currently running PacketFence services before proceeding any further.
To do so, run the following commands:

[source,bash]
----
/usr/local/pf/bin/pfcmd service pf stop
systemctl stop packetfence-config
----

==== Rebooting after services have been stopped

If you reboot a standalone server or one server from a cluster after services
have been stopped, make sure you set the systemd target to `multi-user.target`
before rebooting:

[source,bash]
----
systemctl set-default multi-user.target
----

This will make sure your services don't start up after the reboot.

Set it back to previous target after it boots up:

.Cluster
[source,bash]
----
systemctl set-default packetfence-cluster.target
----

.Standalone
[source,bash]
----
systemctl set-default packetfence.target
----

=== Packages upgrades

IMPORTANT: Again, before starting packages upgrades, make sure to go through (read) the upgrade
instructions specific to the upgrade path taken since some preliminary steps may be
required to be done *BEFORE* the packages upgrades.

==== RHEL / CentOS based systems

Run the following command to update PacketFence:

[source,bash]
----
yum update --enablerepo=packetfence
----

PacketFence, Fingerbank and all their dependencies should now be
upgraded. However, there may be extra steps required depending on the version
you are upgrading from.

===== Upgrade to RHEL / CentOS 7.7 before 9.1.0

If you run a version prior to 9.1.0 and want to *only* upgrade your RHEL /
CentOS system to 7.7, you will need to perform the following preliminary steps
before you perform your OS update through [command]`yum`.

.Disable `systemd-logind` service which is currently causing issues with the `systemctl isolate` command
[source,bash]
----
/usr/bin/systemctl stop systemd-logind
/usr/bin/systemctl --now mask systemd-logind
/usr/bin/systemctl daemon-reload
/bin/bash -c "/usr/bin/systemctl status user-0.slice | /usr/bin/grep -E -o '─[0-9]+' | /usr/bin/sed 's/─//g' | /usr/bin/xargs -I{} /bin/bash -c '/usr/bin/kill -0 {} > /dev/null 2>/dev/null && /usr/bin/echo {} > /sys/fs/cgroup/systemd/tasks'"
----

These commands prevent disconnection issues while [command]`yum` is performing
the update. The last command ensures your current process is removed out of
the `user-0.slice`.

.Get latest version of [package]`ipset` package from packetfence repository
[source,bash]
----
yum update ipset ipset-libs --enablerepo=packetfence
----


==== Debian based systems

Run the following commands to update PacketFence:

[source,bash]
----
apt update
apt install packetfence
----

Since PacketFence heavily relies on Fingerbank, it is recommended to make sure you are running the latest version:

[source,bash]
----
apt install fingerbank
----

PacketFence and Fingerbank should now be upgraded. However, there may be extra
steps required depending on the version you are upgrading from.

==== New versions of configuration files

You should take care to review any changes to configuration files and merge them if required.

===== RHEL / CentOS based systems

To find out which configuration files have changed run following command:

[source,bash]
----
find /usr/local/pf -name \*.rpmnew
----

The list of files returned are the new versions shipped with PacketFence.
Compare them to your existing version and see if there are changes that should
be merged into your existing configuration. Then, once you are done make sure
to delete these files so that there is no confusion the next time you upgrade
PacketFence.

===== Debian based systems

Debian installation system should have interactively asked for existing
modified files. If you answer `No` to keep existing files in place, you can
find out which configuration files have changed by running following command:

[source,bash]
----
find /usr/local/pf -name "*.dpkg-dist"
----


=== Maintenance patches

After you completed all <<_packages_upgrades,package upgrades instructions>>
(including <<_new_versions_of_configuration_files,merge of new configuration files>>), you can apply maintenance patches by running:

[source,bash]
----
/usr/local/pf/addons/pf-maint.pl
----

=== Restart all PacketFence services

Once all <<_steps,steps of upgrade procedure>> are completed, restart
`packetfence-config` and `packetfence` services:

[source,bash]
----
/usr/local/pf/bin/pfcmd fixpermissions
/usr/local/pf/bin/pfcmd pfconfig clear_backend
systemctl restart packetfence-config
/usr/local/pf/bin/pfcmd configreload hard
/usr/local/pf/bin/pfcmd service pf restart
----

=== Regenerate Monit configuration

NOTE: This step is optional

In order to have Monit configuration upgraded, you need to:

. <<PacketFence_Installation_Guide.asciidoc#_generateregenerate_the_monit_configuration,Regenerate Monit configuration>>
. <<PacketFence_Installation_Guide.asciidoc#_enable_and_start_monit,Enable and start monit>> if you stopped it at beginning of upgrade
. Restart rsyslog:

[source,bash]
----
systemctl restart rsyslog
----

== Upgrading from a version prior to 7.0.0


NOTE: You cannot upgrade from CentOS 6 or Debian Wheezy to PacketFence 7.0 and above

=== Debian upgrade


The requirement for MariaDB 10.1 means that a simple "apt upgrade" will not be enough.
You will need to help apt through the upgrade by manually removing some packages and installing some others.
The need to ensure you have backups cannot be overstated.

Make sure the apt database is up to date

    apt update

Remove the MySQL 5.5 packages (do not purge them, as that would delete the database)

    dpkg -r --force-all mysql-client-5.5 mysql-common mysql-server mysql-server-5.5 mysql-server-core-5.5 libmysqlclient18

Install the newer Mariadb-10.1 packages

    apt install libmariadbclient18 libmysqlclient18 mariadb-common mariadb-server-10.1 galera-3 gawk mariadb-client-10.1 mariadb-server-core-10.1 rsync socat libmpfr4 mariadb-client-core-10.1 mysql-common

Finally, upgrade the rest of the packages

    apt full-upgrade

Note that "full-upgrade" may also affect other packages you might have installed on the system if you had other software than PacketFence on it.

=== MariaDB upgrade (CentOS + RHEL only)


Upgrading to PacketFence 7+ will install a more recent version of MariaDB than the one that is shipped with CentOS.

In order to upgrade the MariaDB metadata files and tables, first stop any started process.

  systemctl stop mariadb
  systemctl stop packetfence-mariadb

Then start a mysqld_safe process manually (this will start a background process)

  mkdir -p /var/run/mariadb
  chown mysql: /var/run/mariadb
  mysqld_safe --basedir=/usr &

Then, execute the upgrade script and enter the root password when prompted

  mysql_upgrade -u root -p

When done, kill the mysqld_safe process we started before the update, reattach to it and wait for it to exit

  kill %1 && fg

Note that it might take up to a few minutes for the process to exit depending on the size of your database.

Once done, restart the MariaDB service (managed by PacketFence)

  systemctl start packetfence-mariadb

=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 6.5 schema to 7.0.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-6.5.0-7.0.0.sql

=== Systemd integration


All PacketFence services are managed individually via systemd unit files instead of one unit file (`packetfence.service`). When you updated the PacketFence package, it already set the system target to `packetfence.target`.

If you are hosting the MySQL/MariaDB service on your PacketFence servers (it is by default), you should now manage the service via `packetfence-mariadb.service` instead of `mariadb.service`.
The changes in the server startup will be done automatically by the packaging.

=== Admin roles configuration


Given the portal profiles have now been renamed to connection profiles, you need to make sure any admin role that allowed portal profile Create/Read/Update/Delete operations is updated to be valid for connection profiles.

  cd /usr/local/pf
  sed -i "s/PORTAL_PROFILE/CONNECTION_PROFILE/g" conf/adminroles.conf

=== PacketFence configuration


Multiple parameters inside `pf.conf` have been renamed for better clarity. Execute the following in order to migrate the parameters.

  /usr/local/pf/addons/upgrade/to-7.0-pf-conf-changes.pl

=== Maintenance configuration


Maintenance related configuration for pfmon has been moved to a dedicated configuration file (`/usr/local/pf/conf/pfmon.conf`).

In order to migrate your settings from `pf.conf` to `pfmon.conf`, run the following script:

  /usr/local/pf/addons/upgrade/to-7.0-pf.conf-to-pfmon.conf.pl

=== DHCP filters configuration


Minor changes were made to the DHCP filters configuration (`/usr/local/pf/conf/dhcp_filters.conf`).

First, the `computer_name` attribute was renamed to `computername` to be consistent with the rest of the application.
Then, the `DhcpFingerbank` scope was changed to `Fingerbank`

In order to rename those in an automated way:

  cd /usr/local/pf
  sed -i "s/computer_name/computername/g" conf/dhcp_filters.conf
  sed -i "s/DhcpFingerbank/Fingerbank/g" conf/dhcp_filters.conf

=== Roles configuration


The source of truth for roles is now in a configuration file (`/usr/local/pf/conf/roles.conf`) instead of being in the database. In order to pull the existing roles from your database into the configuration file, execute the following command:

  /usr/local/pf/addons/upgrade/to-7.0-roles-conf.pl

NOTE: The roles still exist in the database like before (node_category table), but their source of truth is now in the configuration file. Should you remove a role manually from `roles.conf`, it will *not* be removed from the database unless you manually go delete it from the database.

=== pfdetect configuration


New parameters have been introduced in `conf/pfdetect.conf`. Run the following script to migrate your configuration.

  /usr/local/pf/addons/upgrade/to-7.0-pfdetect-conf.pl

=== LinkedIn Source changes


If you are using the LinkedIn OAuth2 source, a change has been made on their API, thus you will need to do the following:

  cd /usr/local/pf
  sed -i "s/uas\/oauth2/oauth\/v2/g" conf/authentication.conf


=== Logging service


Since all logging now goes through rsyslog, if you had edited the logging configuration (e.g. to forward logs to a centralized syslog server) make sure that the new logging rules in `/etc/rsyslog.d/packetfence.conf` do not conflict with your changes.

Take a look at `/usr/local/pf/conf/log.conf` and `/usr/local/pf/conf/log.conf.d/*` for the detailed configuration of the PacketFence services.

=== Redis Queue


Clear the redis queue to avoid old stale jobs from being processes.


  systemctl start packetfence-redis_queue
  redis-cli -p 6380 FLUSHALL
  systemctl stop packetfence-redis_queue

=== SSL certificates


Given that haproxy is now the termination point for the captive portal, any SSL configuration you have in `/usr/local/pf/conf/httpd.conf.d/ssl-certificates.conf` needs to be ported so that it works with haproxy.

Easiest solution is to bundle your server cert, your intermediates (if any) along with the key in the default file used by the PacketFence haproxy process (`/usr/local/pf/conf/ssl/server.pem`)

In order to do so:

  # cd /usr/local/pf/
  # cat /path/to/your/server.crt /path/to/your/intermediates.crt /path/to/your/server.key > /usr/local/pf/conf/ssl/server.pem

=== Running 7.0+ in a cluster


A complete re-visit of the database clustering stack was done in version 7.0. If you run your PacketFence installation in a cluster, make sure you read the following section.

==== Active/Active clusters with Active/Passive DB (default before 7.0)

We highly suggest you migrate your existing clustered installation using Corosync/Pacemaker to the new cluster stack of PacketFence that uses MariaDB Galera cluster.
The easiest way to perform this is to build new servers and port your configuration (by copying the configuration files) and your database (using mysqldump).
There are ways to migrate the 2 existing nodes to a 3 nodes cluster but this is not covered in this guide.

===== Corosync adjustment

Note that you can safely keep your existing 2-node cluster with Corosync/Pacemaker in place and things will work like before.
You will simply have to adjust your Corosync configuration so that MariaDB points to the packetfence-mariadb file instead of the mariadb unit.

  primitive MariaDB systemd:packetfence-mariadb \
          op start timeout=60s interval=0 \
          op stop timeout=60s interval=0 \
          op monitor interval=20s timeout=30s

===== Disabling Galera cluster

You must then disable the MariaDB Galera cluster as a replication mechanism as you will still be using DRBD. In order to do so, add the following in `/usr/local/pf/conf/pf.conf`

  [active_active]
  galera_replication=disabled

===== IP address bind

You must also instruct packetfence-mariadb to bind to the management IP address of the server manually.

In order to do so, replace the following section in `/usr/local/pf/conf/mariadb/mariadb.conf.tt`:

  [% IF server_ip.length %]
  bind-address=[% server_ip %]
  [% ELSE %]
  skip-networking
  bind-address=
  [% END %]

with:
  bind-address=1.2.3.4

Where 1.2.3.4 is the management IP address of the server.

===== Disable packetfence-mariadb on boot

Like in previous versions where mariadb shouldn't have been started on boot, now you must ensure its replacement (packetfence-mariadb) doesn't start on boot.

  systemctl disable packetfence-mariadb

*Enabling the packetfence-cluster target*

Next, you must set the default target to packetfence-cluster:

  systemctl set-default packetfence-cluster.target

==== Active/Active clusters with external DB

No changes to your clustering stack is required when using an external database.

==== Active/Passive clusters


CAUTION: You shouldn't be running active/passive clusters anymore. If you do, you're pretty much on your own for community support. Inverse provides professionnal services to help you maintain these clusters. If you intend to keep an active/passive cluster, we suggest you have deep knowledge of Corosync/Pacemaker and strong Linux skills.

First, no changes are required to your database stack as MariaDB supports being deployed in Active/Passive.

You will need to adjust the Corosync/Pacemaker configuration to take in consideration the changes made to systemd for PacketFence services. Before 7.0, PacketFence used to be controlled via a single systemd unit file while now it uses a multiple services grouped in targets. In order to mimic the single service behavior that was in previous versions, a unit file is provided here: https://github.com/inverse-inc/packetfence/blob/devel/packetfence-active-passive.service. You should install this file in `/etc/systemd/system/packetfence.service` and make sure there are no other leftovers of `packetfence.service` unit files on your system.

Then, you must adjust the systemd default target so PacketFence doesn't start on boot and note that this should be done on every future upgrade of your system.

  # systemctl set-default multi-user.target

You should then change your Corosync configuration for MariaDB and PacketFence to the following:

	primitive MariaDB systemd:packetfence-mariadb \
	        op start timeout=60s interval=0 \
	        op stop timeout=60s interval=0 \
	        op monitor interval=20s timeout=30s
	primitive PacketFence systemd:packetfence \
	        op start timeout=300s interval=0 \
	        op stop timeout=300s interval=0 \
	        op monitor interval=300s timeout=300s

== Upgrading from a version prior to 7.1.0


=== Multiple DNS servers per domain


The PacketFence Active Directory Domains integration now supports multiple DNS servers to be specified to find a DC. For this reason the parameter dns_server has been renamed to dns_servers in domain.conf. In order to automatically rename the parameters, run the following command:

    sed -i.bak "s/^dns_server/dns_servers/g" /usr/local/pf/conf/domain.conf

=== Add default values to new auth source parameters


    /usr/local/pf/addons/upgrade/to-7.1-authentication-conf.pl

=== Fix the Ubiquiti typo


In order to use the Ubiquiti switch module that has been renamed, run the following command:

    sed -i.bak "s/Ubiquity/Ubiquiti/g" /usr/local/pf/conf/switches.conf

=== Instagram source changes


Due to a change in the API of Instagram please change the scope if you are using an Instagram OAuth2 source. Replace 'scope=email' by 'scope=basic' in conf/authentication.conf under the section '[Instagram Source]'.

=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 7.0 schema to 7.1.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-7.0.0-7.1.0.sql


== Upgrading from a version prior to 7.2.0


=== Ability to «pin» a domain DC


PacketFence is now able to instruct Samba to «pin» a DC for authentication or use all of them.
You should instruct Samba to connect to all domain controllers by adding the following to each of your domains in domain.conf:

  sticky_dc=*

And then regenerate the domain configuration:

  /usr/local/pf/bin/pfcmd fixpermissions
  /usr/local/pf/bin/pfcmd configreload hard
  /usr/local/pf/bin/pfcmd generatedomainconfig

=== Change to sponsor CC address


The CC address for sponsors is now BCC. In order to adjust the configuration, execute the following:

  cd /usr/local/pf
  sed -i "s/sponsorship_cc/sponsorship_bcc/g" conf/authentication.conf

=== Changes to authentication sources codebase


Any custom authentication sources forms and templates would need to be copied to the new location.

Templates
/usr/local/pf/html/pfappserver/root/authentication/source/type/ -> /usr/local/pf/html/pfappserver/root/config/source/type/

Forms
/usr/local/pf/html/pfappserver/lib/pfappserver/Form/Config/Authentication/Source ->
/usr/local/pf/html/pfappserver/lib/pfappserver/Form/Config/Source


=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 7.1 schema to 7.2.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-7.1.0-7.2.0.sql

== Upgrading from a version prior to 7.3.0


=== Device Registration


You will need to remove anything related to [device_registration] in the conf/pf.conf file.
Once done, you will need to reconfigure any device registration policy using the following instructions: https://packetfence.org/doc/PacketFence_Installation_Guide.html#_devices_registration

=== Changes to `authentication.conf` and `domain.conf` regarding realms and source matching


You have to run the following script to change the configuration:

  /usr/local/pf/addons/upgrade/to-7.3-authentication-conf.pl

=== MariaDB database read-only mode


There was, in some cases, an issue where the database cluster was put in a read-only mode which then prevent it to comes back gracefully.

A modification have been made to now use the wsrep_ready state of the DB as a read only indicator. Therefore, PacketFence will stop putting the DB in read only on quorum + primary loss of MariaDB and trust wsrep_ready instead

Ensure you merge changes in the galera section of `conf/mariadb/mariadb.conf.tt.rpmnew` into `conf/mariadb/mariadb.conf.tt`


Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 7.3.0).


=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 7.2 schema to 7.3.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-7.2.0-7.3.0.sql

== Upgrading from a version prior to 7.4.0


=== New LinkedIn domain list


If you use social login with LinkedIn OAuth2, you will need to adjust the list of domains that are passthroughs in the LinkedIn source.

For all your LinkedIn sources, change the domains to:

  www.linkedin.com,api.linkedin.com,*.licdn.comlatform.linkedin.com

=== Portal redirection timer


The redirection timer configuration (length of the timer bar at the end of the portal) has been moved from the fencing section to the captive_portal section. More precisely, it has moved from `fencing.redirtimer` to `captive_portal.network_redirect_delay`.

=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 7.3 schema to 7.4.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-7.3.0-7.4.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 7.4.0).

== Upgrading from a version prior to 8.0.0


=== Realms upgrade


The way PacketFence detects whether or not it should strip the realm out of a username when performing authentication and authorisation has been moved to the realms. Moreover, it is now configurable based on the context (login on the captive portal or administration interface, as well as when performing authorization in RADIUS 802.1x)

In order to migrate your configuration, you can use the following script which will guide you through the migration:

 /usr/local/pf/addons/upgrade/to-8.0-authentication-conf.pl

=== Fingerbank v2


*Device names*

Packetfence now uses Fingerbank v2 for improved device profiling. Since this new version brings new device names, a rename of the previous data is necessary.

In order to do so, execute the following script:

 /usr/local/pf/addons/upgrade/to-8.0-fingerbank-db-data.pl

*Necessary API key*

Fingerbank doesn't release its signature database anymore and has moved to an API centric approach for device profiling. In order for device profiling to keep working on your installation, you must make sure that there is an API key configured for Fingerbank in your PacketFence installation.

In order to do so, you should make sure you have the following in `/usr/local/fingerbank/conf/fingerbank.conf`

NOTE: In order to request an API key, you can visit the following URL: https://api.fingerbank.org/users/register

```
[upstream]
api_key=YOUR_API_KEY_GOES_HERE
```

WARNING: Fingerbank v1 and v2 *do not* use the same infrastructure. The accounts (API keys) created on fingerbank.inverse.ca before the 8.0 release have been migrated to api.fingerbank.org. Still, you should make sure that you have the correct API key configured in fingerbank.conf by looking at your profile on https://api.fingerbank.org/users/register. If you have a corporate account, then you can safely assume its been migrated, you can email fingerbank@inverse.ca for a confirmation. If you use a Github account and you have tried Fingerbank v2 prior to the PacketFence 8.0 release, *then your API key will be different*. Make sure you update fingerbank.conf in that case.

If you manage a large scale environment, you'll want to make sure your account can perform an unlimited amount of API requests on Fingerbank so that device profiling works correctly in a consistent way. In order to obtain this, contact fingerbank@inverse.ca. Note that most Inverse customers are entitled to free unlimited usage of the Fingerbank Cloud API.

=== Changes to the default switch roles


The default roles that were returned using "Role by Switch Role" have been removed. If you were relying on them to be returned in the RADIUS response, then you need to add them back in the default switch in the 'Roles' tab.

The previous values were:

 * `registration`: `registration`
 * `isolation`: `isolation`
 * `macDetection`: `macDetection`
 * `inline`: `inline`
 * `voice`: `voice`

This is should only be necessary if you are using ACL assignment on your switches and using the default names that were there in PacketFence before.

=== Removal of the graphite database


PacketFence doesn't use graphite anymore for its dashboard. It is recommended to delete the graphite database although this is purely optional.

In order to do so, execute the following:

  mysql -u root -p -e "drop database pf_graphite"

=== Changes to DNS filters


The $qname parameter need to be removed from dns_filters.conf

In order to do so, execute the following command:

  sed -i -e 's/\$qname//g' /usr/local/pf/conf/dns_filters.conf

=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 7.4 schema to 8.0.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-7.4.0-8.0.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 8.0.0).

== Upgrading from a version prior to 8.1.0


=== Changes on unreg_on_accounting_stop parameter


The global configuration parameter unreg_on_acct_stop has been moved in the connection profile.
So if you enabled it then make sure to enable it now in the connection profile.


=== Database schema update (all Linux distributions)


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 7.4 schema to 8.0.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-8.0.0-8.1.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 8.1.0).

== Upgrading from a version prior to 8.2.0


=== Queue Stats maintenance job removal

The queue_stats maintenance job has been deprecated in favor of using pfstats. In order to remove configuration related to this maintenance job, run:

  /usr/local/pf/addons/upgrade/to-8.2-pfmon-conf.pl

=== Upgrade pfdetect Perl regex to the go RE2 regex

The pfdetect was moved from Perl to Go so all rule regexes have to be converted to the RE2 regex syntax.
RE2 is mostly is compatiable the Perl regex syntax.
More information on the RE2 syntax can be found here https://github.com/google/re2/wiki/Syntax.
To upgrade the regex run:

  /usr/local/pf/addons/upgrade/to-8.2-pfdetect-conf.pl

Any Perl regex that cannnot be convert will be displayed and should be fixed.

=== Upgrade realm.conf to be tenant aware


The realms are now multi-tenant aware, in order to upgrade your configuration to have the existing realms use the default tenant, execute the following script:

  /usr/local/pf/addons/upgrade/to-8.2-realm-conf.pl


=== The api_user table has been deprecated


Any users in that were in the api_user table should be migrated to PacketFence local account (password table)

=== Upgrade pf user privileges


Starting from 8.2, stored routines will be dump *with* the PacketFence database.
The user created at the installation ('pf' by default) in database need to
have additional privileges to do that task.

To upgrade the privileges of that user, run the following command:

 /usr/local/pf/addons/upgrade/to-8.2-upgrade-pf-privileges.sh

=== Update connection_type from WIRED_MAC_AUTH to Ethernet-NoEAP

We merged the WIRED_MAC_AUTH and Ethernet-NoEAP to Ethernet-NoEAP so the configuration needs to be updated, to do that run:

 sed -i "s/WIRED_MAC_AUTH/Ethernet-NoEAP/g" /usr/local/pf/conf/profiles.conf /usr/local/pf/conf/vlan_filters.conf /usr/local/pf/conf/radius_filters.conf /usr/local/pf/conf/switch_filters.conf /usr/local/pf/conf/authentication.conf

=== Database schema


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 8.1 schema to 8.2.

To upgrade the database schema, run the following command:

 mysql -u root -p pf -v < /usr/local/pf/db/upgrade-8.1.0-8.2.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 8.2.0).

== Upgrading from a version prior to 8.3.0


=== Upgrade pf.conf to rename configuration parameters


We moved radius_authentication_methods section to radius_configuration and moved all the radius configuration parameters in this new section.
To upgrade your configuration execute the following script:

  /usr/local/pf/addons/upgrade/to-8.3-rename-pf-conf-parameters.pl


=== Upgrade authentication.conf to add searchattributes parameter


We added a new parameter in AD and LDAP authentication sources to be able to do 802.1x authentication with any unique ldap attributes.
This parameter "searchattributes" need to be added in the existing authentication sources.
To apply this configuration execute the following script:

 /usr/local/pf/addons/upgrade/to-8.3-authentication-searchattributes.pl

=== Adjustment to the encoding of the configuration files and templates


Configuration and templates in the admin were previously being saved as latin1 instead of utf8.

This script will convert all latin1 config file to utf8

  /usr/local/pf/addons/upgrade/to-8.3-conf-latin1-to-utf8.sh

=== Database schema


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 8.2 schema to 8.3.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-8.2.0-8.3.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 8.3.0).

== Upgrading from a version prior to 9.0.0


=== Support for Debian 8 dropped


Debian 8 will not be supported anymore for versions 9.0.0 and above. You should instead use Debian 9 now as it is currently the only supported Debian version.

=== Necessity to use MariaDB


NOTE: This only applies to users using an external database server. If your database is hosted on the same server as PacketFence whether you are in cluster or standalone, this requires no attention.

Users hosting an external database for PacketFence will need to run a recent version of MariaDB as it will be the only supported database backend. Failure to use MariaDB may result in errors in the database migration script.

In order to migrate to MariaDB, it is suggested to create a new database server and perform an export of the data through mysqldump and import it in the new server.

The recommended MariaDB version for PacketFence is currently 10.1.21

A recent version of MySQL can also work but going forward, the only tested database engine will be MariaDB.

=== Deprecate the classic dhcp filters


The previous dhcp filters engine has been deprecated in favor of the new one who is able to modify
the dhcp answer on the fly.

=== Violations have been renamed to Security Events


The violations have been renamed to security events. In order to make the appropriate changes in your configuration, execute the following script:

  /usr/local/pf/addons/upgrade/to-9.0-security-events.sh

=== Removed MAC detection setting


The MAC detection setting in the switches has been removed. In order to cleanup the switches configuration for the removal of this setting, execute the following script:

  /usr/local/pf/addons/upgrade/to-9.0-remove_mac_detection.sh

=== Modifications to accounting cleanup


Accounting cleanup is now done via a pfmon task (acct_cleanup) instead of the database backup and maintenance script. Make sure you adjust the cleanup window in pfmon's configuration (Configuration->System Maintenance->Maintenance) if necessary. Also note that the default retention for the accounting data has been lowered to 1 day instead of 1 week like it was before.

=== Admin roles configuration


In order to upgrade the Admin rights, run the following commands

  cd /usr/local/pf
  sed -i "s/SERVICES/SERVICES_READ/g" /usr/local/pf/conf/adminroles.conf
  sed -i "s/REPORTS/REPORTS_READ/g" /usr/local/pf/conf/adminroles.conf

=== Database schema


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 8.3 schema to 9.0.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-8.3.0-9.0.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 9.0.0).


== Upgrading from a version prior to 9.1.0


=== Now possible to disable a domain


In order to add the necessary enabled flag to your existing domains, run the following command:

  /usr/local/pf/addons/upgrade/to-9.1-add-domain-conf.pl

=== pfperl-api port


The port of the pfperl-api service has changed, in order to adjust the existing configuration, run the following command:

  /usr/local/pf/addons/upgrade/to-9.1-update-api.conf.sh

=== Linkedin OAuth2


The LinkedIn API calls have changed drastically.
On top of the new LinkedIn modules that are part of the update, you will need to change the following parameter in all your existing LinkedIn sources:

 API URL of logged user -> https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))

=== VLAN pool configuration


The VLAN pool strategy configuration has been moved to the connection profiles.

In order to migrate the current setting of pf.conf into profiles.conf, you will need to run the following command:

	/usr/local/pf/addons/upgrade/to-9.1-move-vlan-pool-technique-parameter.pl

=== Remove Useragent Triggers


The useragent and user_agent security event triggers have been deprecated. Performing HTTP User-Agent based detection is extremelly inefficient given the very dynamic nature of HTTP User-Agents. You should instead be using the device trigger which leverages the device profiling performed by Fingerbank. In order to remove any existing useragent trigger, execute the following script:

   /usr/local/pf/addons/upgrade/to-9.1-security-events-remove-useragent.pl

=== Self service portal

The device registration configuration file has been removed in favor of using a configuration file for all the self service portal features (status page + device registration).

In order to migrate your configuration, run the following script:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-9.1-selfservice-conf.pl
----

=== Password of the day rotation

Password of the day source now uses access duration values to rotate password.

In order to migrate your configuration, run the following script:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-9.1-update-potd.pl
----


=== Database schema


Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 9.0 schema to 9.1.

To upgrade the database schema, run the following command:

  mysql -u root -p pf -v < /usr/local/pf/db/upgrade-9.0.0-9.1.0.sql

Once completed, update the file /usr/local/pf/conf/currently-at to match the new release number (PacketFence 9.1.0).

== Upgrading from a version prior to 9.2.0


=== Merge of all RPM packages into one (RHEL / CentOS only)

NOTE: This step needs to be done *before* packages upgrade.

Starting from now, PacketFence will be released as an unique RPM package for
`x86_64` architectures. To remove properly older RPM packages, you need to follow these steps:

. Follow instructions mentioned in <<_stop_all_packetfence_services,Stop all PacketFence services>> section and stop before starting packages upgrades
. Uninstall old RPM without running post-uninstallation steps:
+
[source,bash]
----
rpm -e --nodeps --noscripts packetfence-config

# run only if packetfence-remote-arp-sensor has been installed
rpm -e --nodeps --noscripts packetfence-remote-arp-sensor
----
+

. Recopy previous [filename]`pfconfig.conf` filename to its original location:
+
[source,bash]
----
mv -f /usr/local/pf/conf/pfconfig.conf.rpmsave /usr/local/pf/conf/pfconfig.conf
----
+

. Upgrade PacketFence packages by following instructions in <<_packages_upgrades,Packages upgrades>> section for RHEL / CentOS based systems
. Continue upgrade procedure

At the end of upgrade procedure, you should have only one RPM package called
[package]`packetfence`. If you previously installed
[package]`packetfence-release` package in order to have PacketFence repository
installed, this one has been upgraded to latest version.

=== New GPG key for Debian installations (Debian only)

NOTE: This step needs to be done *before* packages upgrade.

In order to install new versions of Debian packages, you will need to add a new GPG key to your system:

[source,bash]
----
wget -O - https://inverse.ca/downloads/GPG_PUBLIC_KEY | sudo apt-key add -
----

You can safely remove the oldest one:
[source,bash]
----
sudo apt-key del FE9E84327B18FF82B0378B6719CDA6A9810273C4
----

=== Database schema

Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 9.1 schema to 9.2.

To upgrade the database schema, run the following command:

[source,bash]
----
mysql -u root -p pf -v < /usr/local/pf/db/upgrade-9.1.0-9.2.0.sql
----

Once completed, update the file [filename]`/usr/local/pf/conf/currently-at` to match the new release number (PacketFence 9.2.0):

[source,bash]
----
cat /usr/local/pf/conf/pf-release > /usr/local/pf/conf/currently-at
----

== Upgrading from a version prior to 9.3.0

=== Execute script action doesn't use sudo anymore

Execute script action in security events doesn't use [command]`sudo` anymore to run scripts.
Consequently, you should ensure that `pf` user is:

* able to read and execute these scripts
* able to run commands inside these scripts (without `sudo`)

=== Database schema

Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 9.2 schema to 9.3.

To upgrade the database schema, run the following command:

[source,bash]
----
mysql -u root -p pf -v < /usr/local/pf/db/upgrade-9.2.0-9.3.0.sql
----

Once completed, update the file [filename]`/usr/local/pf/conf/currently-at` to match the new release number (PacketFence 9.3.0):

[source,bash]
----
cat /usr/local/pf/conf/pf-release > /usr/local/pf/conf/currently-at
----

== Upgrading from a version prior to 10.0.0

=== Kernel development package

NOTE: This step needs to be done *before* packages upgrade.

In this version we need to have the kernel development package that matches your current kernel version in order to build the Netflow kernel module.

==== RHEL / CentOS based systems

[source,bash]
----
yum install kernel-devel-$(uname -r)
----

The headers for your specific kernel may not be published anymore in the CentOS repository. If that is the case, then perform the following prior to the upgrade:

[source,bash]
----
yum update kernel
reboot
yum install kernel-devel-$(uname -r)
----

NOTE: Be sure to follow instructions in <<_rebooting_after_services_have_been_stopped>> section to ensure services will not restart.

==== Debian based systems

[source,bash]
----
apt install linux-headers-$(uname -r)
----

=== Timezone

The timezone set in pf.conf will be set on the operating system every time PacketFence reloads its configuration.
For this reason, you should review the timezone setting in the general section of pf.conf (System Configuration -> General Configuration in the admin).
If its empty, PacketFence will use the timezone that is already set on the server and you don't have anything to do.
Otherwise, it will set the timezone in this setting on the operating system layer for consistency which may modify the timezone setting of your operating system.
In this case you should ensure that you reboot the server after completing all the steps of the upgrade so that the services start with the right timezone.

=== Tracking configuration service enabled by default

`packetfence-tracking-config` service is now enabled by default. It means that all
manual changes to configuration files will be recorded, including passwords.

You can disable this service from PacketFence web admin if you don't want such behavior.

=== New PacketFence PKI in Golang

NOTE: If you do not use the PacketFence PKI, you can safely ignore this step

PacketFence-pki is deprecated in favour of the new PacketFence PKI written in Golang.
If you previously used the PacketFence-pki you will need to migrate from the SQLite database to MariaDB.
To migrate, be sure that the database is running and the new PKI too and do the following:

  /usr/local/pf/addons/upgrade/to-10.0-packetfence-pki-migrate.pl

Next edit the PKI providers (Configuration -> PKI Providers) and redefine the profile to use.
Finally, if you use OCSP then change the URL to use this one:
http://127.0.0.1:22225/api/v1/pki/ocsp

=== New MariaDB Galera recovery service

This release adds a new service that will automatically attempt to recover broken Galera cluster members and can also perform a full recovery of a Galera cluster.
These automated decisions may lead to potential data loss.
If this is not acceptable for you disable the galera-autofix service in pf.conf or in "System Configuration->Services".
More details and documentation is available in the "The galera-autofix service" section of the clustering guide.

=== Removal of currently-at file and configurator display

The file [filename]`/usr/local/pf/conf/currently-at` is no longer needed, it can be removed:

[source,bash]
----
rm /usr/local/pf/conf/currently-at
----

You also need to disable access to configurator by running:

[source,bash]
----
printf '\n[advanced]\nconfigurator=disabled\n' >> /usr/local/pf/conf/pf.conf
----

=== Database Privileges

Some queries now need CREATE TEMPORARY TABLE privilege.
You will be prompted for the MariaDB root password when running this script:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.0-upgrade-pf-privileges.sh
----

=== Filter Engine

We are now using a new format for the VLAN/DNS/DHCP/RADIUS/Switch filters.
This script will convert the old format to the new one:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.0-filter_engines.pl
----

=== httpd.admin daemon disabled by default

Starting from now, `httpd.admin` daemon is disabled by default and web admin
interface is managed by HAProxy using `haproxy-admin` daemon.

It means that if you use a dedicated SSL certificate (different from captive
portal certificate) for web admin interface, this one has been replaced by
your captive portal certificate. You can find it at
[filename]`/usr/local/pf/conf/ssl/server.pem`.

=== Database schema

Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 9.3 schema to 10.0.

To upgrade the database schema, run the following command:

[source,bash]
----
mysql -u root -p pf -v < /usr/local/pf/db/upgrade-9.3.0-10.0.0.sql
----

== Upgrading from a version prior to 10.1.0

=== RADIUS attributes in authentication sources

RADIUS attributes used in rules of authentication sources are now prefixed by `radius_request`.
This script will add the prefix:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.1-authentication-prefix.pl
----

=== Changes in RADIUS configuration for better LDAP support

In order to improve LDAP support when using RADIUS, new files and configuration parameters have been added.
This script will update your current configuration:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.1-move-radius-configuration-parmeters.pl
----

=== RADIUS filter templates

RADIUS filters now support templated values like switch templates.
This script will update your RADIUS filters to new format:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.1-radius-filter-template.pl
----

=== New EAP configuration parameter in realm.conf file

A new EAP parameter has been added to [filename]`realm.conf` file.
This script will add this parameter to your current configuration file:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.1-realm-conf.pl
----

=== Status of rules

It's now possible to enable/disable rules in authentication sources.
This script will add the new `status` parameter:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.1-rule-status.pl
----

=== Support for CoA in Unifi controllers

Support for CoA for Unifi AP is now supported but requires to have the latest controller and AP firmware available.
Make sure you run the latest version of the controller and firmware if you use Ubiquiti equipment.

=== Database schema

Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 10.0.0 schema to 10.1.0.

To upgrade the database schema, run the following command:

[source,bash]
----
mysql -u root -p pf -v < /usr/local/pf/db/upgrade-10.0.0-10.1.0.sql
----

== Upgrading from a version prior to 10.2.0

=== Self registration portal

The parameter device_registration_role has been renamed device_registration_roles, in order to apply the change run the following script:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.2-selfservice-conf.pl
----

=== Switch type needs to be defined

If switch type was not defined, this script will set it to `Generic`:

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.2-default-switch-packetfence-standard.pl
----

=== Convert the pfmon configuration file to pfcron

Convert the pfmon configuration file to pfcron

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.2-pfmon-maintenance.pl
----

=== Rename PFMON* actions to PFCRON*

Rename PFMON actions to the PFCRON actions

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.2-adminroles-conf.pl
----

=== Syslog parsers are now tenant aware


Add the tenant_id to pfdetect

[source,bash]
----
/usr/local/pf/addons/upgrade/to-10.2-pfdetect-conf.pl
----

=== Database schema

Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the 10.1.0 schema to 10.2.0.

To upgrade the database schema, run the following command:

[source,bash]
----
mysql -u root -p pf -v < /usr/local/pf/db/upgrade-10.1.0-10.2.0.sql
----

== Upgrading from a version prior to X.Y.Z

== Rename win_agent_download_uri -> windows_agent_download_uri

[source,bash]
----
    cd /usr/local/pf/
    ./addons/upgrade/to-11.0-provisioners-windows_agent_download_uri.pl
----
    
== Migrate switch ACLs to roles.

In version 11 ACLs are now configured in the roles.
This script will guide you through the process of migrating your ACLs from the switches to roles.

You can either choose a single switch to populate all your roles ACLS.
Or to choose the ACLs per role.

Follow the instructions from the script.

[source,bash]
----
    cd /usr/local/pf/
    ./addons/upgrade/to-11.0-roles-acls.pl
----

== LDAP port per server has been deprecated

The ability to define a specific port per host in the list of the LDAP servers of a single authentication source has been deprecated. If you have such entries, adjust them accordingly. If you have been using the same LDAP port for all the hosts in an authentication source, then this will not apply to you.

=== Database schema

Changes have been made to the database schema. You will need to update it accordingly.
An SQL upgrade script has been provided to upgrade the database from the X.X.X schema to X.Y.Z.

To upgrade the database schema, run the following command:

[source,bash]
----
mysql -u root -p pf -v < /usr/local/pf/db/upgrade-X.X.X-X.Y.Z.sql
----

== Archived upgrade notes

include::upgrade-notes/archived_upgrade_notes.asciidoc[]

include::includes/additional-info.asciidoc[]

include::includes/commercial-support.asciidoc[]

include::includes/license.asciidoc[]

